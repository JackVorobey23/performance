# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Step 1: Explicitly manage and potentially invalidate the cache
      - name: Cache npm dependencies
        uses: actions/cache@v4 # Use latest cache action v4
        id: npm-cache # Give the cache step an ID
        with:
          path: ~/.npm # Cache the npm cache directory (~/.npm)
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-v1 # Add a version suffix '-v1'
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-node-

      # Step 2: Set up Node.js LTS - *without* its built-in cache since we handle it manually above
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.13.1
          # No cache: 'npm' here - we are using actions/cache manually above

      # Step 3: Install dependencies using npm ci
      # Uses the cache restored in the 'Cache npm dependencies' step if available
      - name: Install dependencies
        run: npm ci

      # Step 4: Build the project
      - name: Build
        run: npm run build # Ensure this command outputs to './dist' or update path below

      # Step 5: Configure GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Step 6: Upload the build artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist folder (or change if your build output is different)
          path: "./dist"

      # Step 7: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
